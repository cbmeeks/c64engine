!to "color_matrix.prg", cbm   ; output program
!sl "labels.l"          ; create label file for vice
!cpu 6510               ; for illegal opcodes
!convtab scr            ; for conversion to c64 screen codes

!source "../lib/mem.acme"
!source "../lib/vic.acme"
!source "../lib/cia.acme"
!source "../lib/std.acme"

LAST_LINE = $fa
START               = $080d
+create_basic_starter START
*=START

!zone {
;-------------------------------------------------------------------------------
;   disable all basic, kernal and irq crap
;-------------------------------------------------------------------------------

    ; set empty interrupt routine
    +set16 EMPTY_INTERRUPT, VECTOR_NMI
    +set16 EMPTY_INTERRUPT, VECTOR_IRQ

    ; disable IRQs
    sei

    ; disable ROMs
    +set ALL_RAM_WITH_IO, RAM_ROM_SELECTION
    +disable_timer_interrupts

    lda #0
    ; no IRQs
    sta VIC_IRQ_CONTROL
    ; set timer A to 0
    sta CIA2_TIMER_A_LO
    sta CIA2_TIMER_A_HI

    ; trigger timer A interrupt
    +set %10000001, CIA2_INTERRUPT_CONTROL
    +set %00000001, CIA2_CONTROL_TIMER_A

    ; reset stack
    ldx #$ff
    txs

    ; just clear this flag and never ever touch this again
    cld

    ; -> NMI is disabled as soon as EMPTY_INTERRUPT has been triggered since we will never ever ack NMI again
    ; -> zero page completely free on this spot except for the special regs $00 and $01

;-------------------------------------------------------------------------------
;   setup VIC
;-------------------------------------------------------------------------------

    ; select VIC area: bank 1
    lda CIA2_DATA_PORT_A
    and #%11111100
    ora #%00000010
    sta CIA2_DATA_PORT_A

    ; select screen bank 15, hires-bank 0
    lda #%11110000
    sta VIC_ADDR_SELECT

;-------------------------------------------------------------------------------
;   setup test stuff
;-------------------------------------------------------------------------------

    ; clear ram
    lda #12
    ldx #0
-
    sta SCREEN    + $0000, x
    sta SCREEN    + $0100, x
    sta SCREEN    + $0200, x
    sta SCREEN    + $0300, x
    dex
    bne -

    ; clear ram
    lda #COLOR_GREY_2
    ldx #0
-
    sta COLOR_RAM + $0000, x
    sta COLOR_RAM + $0100, x
    sta COLOR_RAM + $0200, x
    sta COLOR_RAM + $0300, x
    dex
    bne -

;-------------------------------------------------------------------------------
;   setup raster irq
;-------------------------------------------------------------------------------

    ; ack all interrupts which might have happend
    +set $ff, VIC_IRQ_STATUS

    +set16 IRQ, VECTOR_IRQ
    +set_raster_line_9 LAST_LINE
    +set 1, VIC_IRQ_CONTROL
    ; enable IRQs
    cli

-
    ; some 7 cycle garbage instructions
    lda ($f0), y
    lda ($f0, x)
    lda ($f0), y
    lda ($f0, x)
    lda ($f0), y
    sec     ; 2
    +bcs    ; 3
    jmp -
}

state
    !by 0

IRQ !zone {
;-------------------------------------------------------------------------------
;   LAST_LINE
;-------------------------------------------------------------------------------
    +save_regs .out

    inc VIC_BORDER

    lda state
    bne .state_1

.state_0
    ldx #$0f
-
    lda #0
!for .row, 0, 15 {
    sta COLOR_RAM + .row * 40, x
    clc
    adc #1
}
    dex
    bpl -

    +set 1, state
    jmp .out_dec_border

.state_1
    ldx #$0f
-
    txa
!for .row, 0, 15 {
    sta COLOR_RAM + .row * 40, x
}
    dex
    bpl -

    +set 0, state

.out_dec_border
    dec VIC_BORDER

.out
    +ack_restore_rti
EMPTY_INTERRUPT = *-1
}

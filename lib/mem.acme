; 
; zero page: $0000 - $00ff
;

RAM_ROM_SWITCH     = $01

PTR_TILE_R          = $04;-$05
PTR_HIRES_R         = $06;-$07
PTR_COLOR_R         = $08;-$09
PTR_SCREEN_R        = $0a;-$0b
PTR_HIRES_C         = $0c;-$0d
PTR_COLOR_C         = $0e;-$0f
PTR_SCREEN_C        = $10;-$11

;
; CPU stack: $0100 - $01ff
;

CPU_STACK           = $0100

;
;  sprite multiplexer
;

;SPR_INDEX           = $0700; - $020f
SPR_0_X             = $0710; - $021f
SPR_0_Y             = $0720; - $022f
SPR_0_COLOR         = $0730; - $023f
SPR_0_PTR           = $0740; - $024f
SPR_0_FLAGS         = $0750; - $025f
STRIP_0_X           = $0760; - $0263
STRIP_0_Y           = $0764; - $0267
STRIP_0_COLOR       = $0768; - $026b
STRIP_0_PTR         = $076c; - $026f
STRIP_X_MSB         = $0770
STRIP_X_EXPAND      = $0771
STRIP_Y_EXPAND      = $0772
STRIP_MAX_Y         = $0773

;MULTI_MAX_Y_IN_STRIP = $05
;FRAME_COUNTER       = $06
;STRIP0_IN_FRAME     = $07
;STRIP1_IN_FRAME     = $08
;STRIP2_IN_FRAME     = $09
;STRIP3_IN_FRAME     = $0a
;COLLISION_0_1       = $0b
;COLLISION_1_2       = $0c
;COLLISION_2_3       = $0d
;SPRITE_STRIP_X_MSB  = $0e
;SPRITE_STRIP_MULTI  = $0f
;SPRITE_STRIP_X      = $10
SPRITE_STRIP_Y      = $18
SPRITE_STRIP_COLOR  = $20
SPRITE_STRIP_FRAME  = $28
MULTI_INDEX_TABLE   = $30
R16 = $42; -$43
R8 = $45

DBG = $50

; is indexed by 
; lda FRAME_COUNTER_TABLE, x
; where x = {1, 3}
FRAME_COUNTER_TABLE = $50-1

; 
; CPU stack: $0100 - $01ff
;

CPU_STACK   = $0100; - $01ff

; 
; VIC area
; 

VIC_BANK        = $4000; - $7fff
HIRES           = $4000; - $5fff
SPR_FR          = $6000; - $7bff -> 112 sprite frames
SCREEN          = $7c00; - $7fff
SPR_PTR         = SCREEN + $0400 - 8

!to "engine.prg", cbm   ; output program
!sl "labels.l"          ; create label file for vice
!cpu 6510               ; for illegal opcodes
!convtab scr            ; for conversion to c64 screen codes

!source "lib/mem.acme"
!source "lib/vic.acme"
!source "lib/cia.acme"
!source "lib/std.acme"

SLOWDOWN=2
SCROLL_SPEED = 2

+create_basic_starter $0c00
*=$0c00; = 2304

CONTROL_X        =%00010000
CONTROL_Y        =%00110000
CONTROL_Y_MASK   =%10111111
CONTROL_Y_INVALID=%01110000

FIRST_BADLINE = $30
LINE_0        = FIRST_BADLINE-3
LINE_SPLIT    = FIRST_BADLINE-3

LINES_TO_CRUNCH = 25

START !zone {
    ; select VIC area: bank 1
    lda CIA2_DATA_PORT_A
    and #%11111100
    ora #%00000010
    sta CIA2_DATA_PORT_A

    ; select screen bank 15, hires-bank 0
    lda #%11110000
    sta VIC_ADDR_SELECT

;-------------------------------------------------------------------------------
;   disable all basic, kernal and irq crap
;-------------------------------------------------------------------------------
    ; disable IRQs
    sei

    ; disable ROMs
    +set RAM_ROM_ALL_RAM_WITH_IO, RAM_ROM_SELECTION

    ; ack all interrupts which might have happend
    +set $ff, VIC_IRQ_STATUS
    lda CIA1_INTERRUPT_CONTROL
    lda CIA2_INTERRUPT_CONTROL

    ; set empty interrupt routine
    +set16 EMPTY_INTERRUPT, VECTOR_NMI

    ; disable_timer_interrupts
    lda #%01111111
    sta CIA1_INTERRUPT_CONTROL
    sta CIA2_INTERRUPT_CONTROL

    ; set timer A to 0
    lda #0
    sta CIA2_TIMER_A_LO
    sta CIA2_TIMER_A_HI

    ; trigger timer A interrupt
    +set %10000001, CIA2_INTERRUPT_CONTROL
    +set %00000001, CIA2_CONTROL_TIMER_A

    ; reset stack
    ldx #$ff
    txs

    ; just clear this flag and never ever touch this again
    cld

    ; enable IRQs
    cli

    ; -> NMI is disabled as soon as EMPTY_INTERRUPT has been triggered since we will never ever ack NMI again
    ; -> zero page completely free on this spot except for the special regs $00 and $01

;-------------------------------------------------------------------------------
;   setup raster irq
;-------------------------------------------------------------------------------

    ; prepare zero sprite for clipping

    ; zero-fill sprite frame
    lda #0
    ldx #63
-
    sta VIC_BANK - 64, x
    dex
    bpl -

    ; fill test sprite frame
    lda #$ff
    ldx #63
-
    sta SPR_FR, x
    dex
    bpl -

    ; set sprite pionters in that bank
    lda #$ff
    !for .i, 8 {
        sta SPR_PTR - $4000
    }

    +set $ff, VIC_SPR_ENABLE
    +set 100, VIC_SPR_0_X
    +set 100, VIC_SPR_0_Y

    +set (SPR_FR % $4000) / 64, SPR_PTR

    lda #%00011011
    ldx #0
-
    sta HIRES, x
    dex
    bne -

    sei
        +set16 IRQ, VECTOR_IRQ
        +set_raster_line_9 LINE_0
        +set 1, VIC_IRQ_CONTROL
    cli

-
    ; some 7 cycle garbage instructions
    lda ($ff), y
    lda ($ff, x)
    lda ($ff), y
    lda ($ff, x)
    lda ($ff), y
    sec     ; 2
    +bcs    ; 3
    jmp -
}

!source "scroll.acme"
!source "joystick.acme"
!source "raster.acme"

SCROLL_SPEED = 4

INC_HARD_Y !zone {
    inc HARD_Y
    lda #25
    cmp HARD_Y
    bne .return

    lda #0
    sta HARD_Y

    lda HARD_X
    sec
    sbc #16
    sta HARD_X
    clc
    adc #40
    cmp #40 
    +bae +          ; jmp if A < 40
    sta HARD_X
    rts
+
    dec SCREEN_Y

.return
    rts
}

DEC_HARD_Y !zone {
    dec HARD_Y
    bpl .return

    lda #24
    sta HARD_Y

    lda HARD_X
    clc
    adc #16
    sta HARD_X
    sec
    sbc #40
    bmi +
    sta HARD_X
    rts
+
    inc SCREEN_Y

.return
    rts
}

!macro wrap_inc .mem, .inc, .and, .l {
    lda .mem
    clc
    adc #.inc
    and #.and-1
    sta .mem
    bne .l
}

!macro wrap_dec .mem, .dec, .and, .l {
    lda .mem
    sec
    sbc #.dec
    and #.and-1
    sta .mem
    +bbc .l
}

!macro tile_check .rc, .rcmax, .xy, .xymax, .l {
    lda .xy
    cmp #.xymax
    bne +
    lda .rc
    cmp #.rcmax
    beq .l
+
}

SCROLL_U !zone {
    +tile_check TILE_R, 0, TILE_Y, 0, .return
    +wrap_dec SOFT_Y, SCROLL_SPEED, 8, .return
    jsr DEC_HARD_Y
    +wrap_dec TILE_R, 1, 4, .return
    dec TILE_Y

.return
    rts
}

SCROLL_D !zone {
    +tile_check TILE_R, 3, TILE_Y, 63, .return
    +wrap_inc SOFT_Y, SCROLL_SPEED, 8, .return
    jsr INC_HARD_Y
    +wrap_inc TILE_R, 1, 4, .return
    inc TILE_Y

.return
    rts
}

SCROLL_L !zone {
    +tile_check TILE_C, 0, TILE_X, 0, .return
    +wrap_inc SOFT_X, SCROLL_SPEED, 8, .return

    inc HARD_X
    lda #40
    cmp HARD_X
    bne +

    lda #0
    sta HARD_X
    jsr DEC_HARD_Y
+
    +wrap_dec TILE_C, 1, 4, .return
    dec TILE_X

.return
    rts
}

SCROLL_R !zone {
    +tile_check TILE_C, 3, TILE_X, 63, .return
    +wrap_dec SOFT_X, SCROLL_SPEED, 8, .return

    dec HARD_X
    bpl +

    lda #39
    sta HARD_X
    jsr INC_HARD_Y
+
    +wrap_inc TILE_C, 1, 4, .return
    inc TILE_X

.return
    rts
}

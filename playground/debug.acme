CHARS = SCREEN_ZERO + $200
!set FRAME = (SPR_FR_ZERO % $4000) / 64

INIT_SPRITES !zone {
    lda #$ff
    sta VIC_SPR_ENABLE
    lda #0
    sta VIC_SPR_MULTI
    sta VIC_SPR_EXP_X
    sta VIC_SPR_EXP_Y

    ldx #1
    ldy #100
!for .j, 8 {
!set .i = .j - 1
    stx VIC_SPR_0_COLOR + .i
    +set 64 + 24*.i, VIC_SPR_0_X + .i*2

    lda #100
    sta VIC_SPR_0_Y + 2*.i
}

    ldx #0
    lda #0
-
    sta SPR_FR_ZERO, x
    sta SPR_FR_ZERO + $100, x
    inx
    bne -

    rts
}

COPY_CHARS !zone {

!for .rrow, 8 {
!set .row = .rrow - 1
    !for .cchar, 10 {
    !set .char = .cchar - 1
        lda $d000 + '0'*8 + .char*8 + .row
        sta CHARS + .char + .row * 16 
    }
}

!for .rrow, 8 {
!set .row = .rrow - 1
    !for .cchar, 6 {
    !set .char = .cchar - 1
        lda $d000 + 'a'*8 + .char*8 + .row
        sta CHARS + 10 + .char + .row * 16 
    }
}

    rts

.counter
    !by 0
}

!macro dbg2spr .spr {
    tay
    and #%00001111
    tax
!for .j, 8 {
!set .i = .j - 1
    lda CHARS + .i*16, x
    sta SPR_FR_ZERO + .spr*64 + 1 + .i*3
}
    tya
    lsr
    lsr
    lsr
    lsr
    tax
!for .j, 8 {
!set .i = .j - 1
    lda CHARS + .i*16, x
    sta SPR_FR_ZERO + .spr*64 + .i*3
}
    +set FRAME + .spr, SPR_PTR + .spr
    rts
}

DEBUG_0 +dbg2spr 0
DEBUG_1 +dbg2spr 1
DEBUG_2 +dbg2spr 2
DEBUG_3 +dbg2spr 3
DEBUG_4 +dbg2spr 4
DEBUG_5 +dbg2spr 5
DEBUG_6 +dbg2spr 6
DEBUG_7 +dbg2spr 7

DEBUG_SIZE=DEBUG_1-DEBUG_0
